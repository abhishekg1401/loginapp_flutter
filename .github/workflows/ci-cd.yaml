name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  FIREBASE_TOKEN_STAGING: ${{ secrets.FIREBASE_TOKEN_STAGING }}
  FIREBASE_TOKEN_PRODUCTION: ${{ secrets.FIREBASE_TOKEN_PRODUCTION }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'

      - name: Install dependencies
        run: flutter pub get

      - name: Run lint checks
        run: flutter analyze

#      - name: Run unit and widget tests
#        run: flutter test --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
             token: ${{ secrets.CODECOV_TOKEN }}
  
  build_android:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'

      - name: Build Android APK
        run: flutter build apk --release

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy_to_firebase:
    needs: build_android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
        # Add steps for building your Flutter app, running tests, etc.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
        
      - name: Install dependencies
        run: flutter pub get
        
 #     - name: Run integration tests
 #       run: flutter test integration_test/
        
      - name: Build app for production
        run: flutter build apk --release

#      - name: Download artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: app-release.apk
#          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Deploy to Firebase App Distribution (Staging)
        if: success()
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_STAGING }}
          token: ${{ secrets.FIREBASE_TOKEN_STAGING }}
          groups: 'testers'
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: 'Automated staging build'


  deploy_production:
    needs: deploy_to_firebase
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
        # Add steps for building your Flutter app, running tests, etc.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
        
      - name: Install dependencies
        run: flutter pub get
        
 #     - name: Run integration tests
 #       run: flutter test integration_test/
        
      - name: Build app for production
        run: flutter build apk --release
        
    # Add a step to deploy to Firebase App Distribution for production
      - name: Deploy to Firebase App Distribution (Production)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: 'testers' # Customize as needed
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: 'Automated production build'